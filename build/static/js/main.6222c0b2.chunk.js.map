{"version":3,"sources":["redux/reducer/user.ts","redux/index.ts","components/messageInput/messageInput.tsx","api/file.ts","helpers/file.ts","reportWebVitals.ts","helpers/errorCodes.ts","api/user.ts","utils/loading.ts","pages/login/login.tsx","api/device.ts","pages/registerDevice/registerDevice.tsx","assets/images/profile.png","components/chatListItem/chatListItem.tsx","components/chatWindow/chatWindow.tsx","components/messages/messages.tsx","pages/home/home.tsx","components/navbar/privateNavItems/privateNavItems.tsx","components/navbar/publicNavItems/publicNavItems.tsx","components/navbar/navbar.tsx","routes/public/public.tsx","routes/private/private.tsx","routes/index.tsx","index.tsx","redux/action/user.ts"],"names":["initialState","user","email","chatList","accessToken","chat","currentFocus","ws","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","console","log","payload","messageStore","messages","receiverUserName","message","senderName","MessageInput","useSelector","dispatch","useDispatch","useState","setMessage","sendMessageHandler","event","a","preventDefault","userFileUpload","document","getElementById","alert","files","length","file","Object","prototype","hasOwnProperty","call","selectedFile","convertFileToBase64","base64","Buffer","Uint8Array","arrayBuffer","from","uploadFile","path","channelId","send","JSON","stringify","key","value","receiver","filePath","newMessage","text","received","attachment","thumbnailUrl","className","onSubmit","encType","onInput","target","id","fileUploadPromise","Promise","resolve","reject","getState","data","FormData","append","requestOptions","method","body","apiEndPoint","fetch","result","json","base64Promise","reader","FileReader","onload","e","readAsDataURL","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","errors","tryLoginApi","password","deviceName","deviceId","loginPromise","headers","errorMessage","startLoading","setStartLoading","stopLoading","setStopLoading","Login","loginFormHandler","props","history","emailElem","passwordElem","deviceData","localStorage","getItem","parse","wsEndPoint","location","origin","replace","socket","WebSocket","onopen","setWs","onmessage","sender","receiverUser","sendAt","messageObj","keys","nickname","onerror","onclose","logoutUser","push","loginUser","setItem","refreshToken","this","htmlFor","required","aria-describedby","autoComplete","to","React","Component","connect","withRouter","trySendDeviceRegisterApi","trySetDeviceRegisterApi","code","setCodePromise","RegisterDevice","useHistory","registerFormHandler","deviceNameElem","randomId","split","join","registerCodeFormHandler","registerCodeElem","registerCode","placeholder","ChatListItem","name","profileImage","onClickHandler","onClick","src","profile","alt","ChatWindow","map","index","Messages","items","item","displayUserList","profileURL","setFocusUser","getChatListItems","PrivateNavItems","aria-current","removeItem","PublicNavItems","Navbar","isKeepLogin","token","err","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Public","component","rest","render","pathname","MainRouter","Home","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6222c0b2.chunk.js","sourcesContent":["const initialState = {\r\n  user: {\r\n    email: \"\",\r\n    chatList: {},\r\n    accessToken: \"\",\r\n  },\r\n  chat: [],\r\n  currentFocus: \"\",\r\n  ws: null,\r\n  loading: false,\r\n};\r\n\r\nexport const userReducer = function (state: any = initialState, action: any) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      console.log(action);\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          email: action.payload.email,\r\n          chatList: action.payload.chatList,\r\n          accessToken: action.payload.accessToken,\r\n        },\r\n        chat: action.payload.messageStore,\r\n      };\r\n      return state;\r\n    case \"LOGOUT\":\r\n      state = {\r\n        ...state,\r\n        user: {\r\n          email: \"\",\r\n          chatList: {},\r\n          accessToken: \"\",\r\n        },\r\n      };\r\n      return state;\r\n    case \"LOAD_CHAT\":\r\n      state = { ...state, chat: state.user.chatList[action.payload].messages };\r\n      return state;\r\n    case \"START_LOADING\":\r\n      state = { ...state, loading: true };\r\n      return state;\r\n    case \"STOP_LOADING\":\r\n      state = { ...state, loading: false };\r\n      return state;\r\n    case \"SET_FOCUSED_USER\":\r\n      state = { ...state, currentFocus: action.payload };\r\n      return state;\r\n    case \"SET_WS\":\r\n      state = { ...state, ws: action.payload };\r\n      return state;\r\n    case \"NEW_MESSAGE\":\r\n      const { receiverUserName, message, senderName } = action.payload;\r\n      // const userMessages = state.messages[receiverUserName];\r\n      // if (!userMessages) {\r\n      //   state.messages[receiverUserName] = [message];\r\n      // } else {\r\n      //   userMessages.concat([message]);\r\n      // }\r\n      // state = Object.assign(state, {\r\n      //   ...state,\r\n      //   messages: userMessages,\r\n      // });\r\n      state = {\r\n        ...state,\r\n        chat: [...state.chat, { receiverUserName, ...message, senderName }],\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { compose, createStore } from \"redux\";\r\nimport { userReducer } from \"./reducer/user\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(userReducer, composeEnhancers());\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { uploadFile } from \"../../api/file\";\r\nimport { convertFileToBase64 } from \"../../helpers/file\";\r\nimport { newMessage } from \"../../redux/action/user\";\r\nimport \"./messageInput.css\";\r\n\r\nconst MessageInput = () => {\r\n  const currentFocus = useSelector((state: any) => state.currentFocus);\r\n  const email = useSelector((state: any) => state.user.email);\r\n  const chatList = useSelector((state: any) => state.user.chatList);\r\n  const ws = useSelector((state: any) => state.ws);\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const sendMessageHandler = async (event: any) => {\r\n    event.preventDefault();\r\n    const userFileUpload: any = document.getElementById(\r\n      \"userFileUpload\"\r\n    ) as HTMLInputElement;\r\n    let files: any = null;\r\n    if (!currentFocus) {\r\n      alert(\"Please a contact first\");\r\n      return;\r\n    }\r\n    debugger;\r\n    if (!message && userFileUpload.files.length <= 0) {\r\n      alert(\"Plase select a file or type some message\");\r\n      return;\r\n    }\r\n    if (userFileUpload.files.length > 0) {\r\n      for (const file in userFileUpload.files) {\r\n        if (Object.prototype.hasOwnProperty.call(userFileUpload.files, file)) {\r\n          const selectedFile: any = userFileUpload.files[file];\r\n          const base64 = await convertFileToBase64(selectedFile);\r\n          console.log(base64);\r\n          files = Buffer.from(new Uint8Array(await selectedFile.arrayBuffer()));\r\n          const { path }: any = await uploadFile(selectedFile);\r\n          const channelId = chatList[currentFocus][`channelId`];\r\n          ws.send(\r\n            JSON.stringify({\r\n              key: \"newMessageFile\",\r\n              value: {\r\n                message,\r\n                receiver: currentFocus,\r\n                filePath: path,\r\n                email,\r\n                channelId,\r\n              },\r\n            })\r\n          );\r\n\r\n          dispatch(\r\n            newMessage({\r\n              receiverUserName: currentFocus,\r\n              message: {\r\n                text: \"photo\",\r\n                received: true,\r\n                attachment: { thumbnailUrl: base64 },\r\n              },\r\n              senderName: \"Self\",\r\n            })\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      console.log(currentFocus);\r\n      const channelId = chatList[currentFocus][`channelId`];\r\n      ws.send(\r\n        JSON.stringify({\r\n          key: \"newMessage\",\r\n          value: { message, receiver: currentFocus, email, channelId },\r\n        })\r\n      );\r\n      dispatch(\r\n        newMessage({\r\n          receiverUserName: currentFocus,\r\n          message: { text: message, received: true },\r\n          senderName: \"Self\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"messageInputContainer\">\r\n      <form\r\n        className=\"m-2\"\r\n        onSubmit={sendMessageHandler}\r\n        encType=\"multipart/form-data\"\r\n      >\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onInput={(event: any) => setMessage(event.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"file\"\r\n            className=\"form-control-file\"\r\n            id=\"userFileUpload\"\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-info mt-2\" type=\"submit\">\r\n          Send\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import { port } from \"../helpers/config\";\r\nimport { store } from \"../redux\";\r\n\r\nexport const uploadFile = async (file: any) => {\r\n  const fileUploadPromise = new Promise(async (resolve, reject) => {\r\n    try {\r\n      const {\r\n        user: { accessToken },\r\n      } = store.getState();\r\n      if (accessToken) {\r\n        console.log(\"accessToken: \", accessToken);\r\n        var data = new FormData();\r\n        data.append(\"myFile\", file);\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          body: data,\r\n        };\r\n        let apiEndPoint = \"\";\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n          // dev code\r\n          apiEndPoint = `http://localhost:${port}/uploadfile`;\r\n        } else {\r\n          // production code\r\n          apiEndPoint = \"/uploadfile\";\r\n        }\r\n        let result: any = await fetch(apiEndPoint, requestOptions);\r\n        result = await result.json();\r\n        console.log(\"result: \", result);\r\n\r\n        resolve(result);\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n  return await fileUploadPromise;\r\n};\r\n","export const convertFileToBase64 = async (file: any) => {\r\n  const base64Promise = new Promise((resolve, reject) => {\r\n    try {\r\n      var reader = new FileReader();\r\n      reader.onload = function (e: any) {\r\n        // The file's text will be printed here\r\n        console.log(e.target.result);\r\n        resolve(e.target.result);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n\r\n  return await base64Promise;\r\n};\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const errors: any = {\r\n  \"12\": \"LOGIN_FAILED_REASON\",\r\n  \"13\": \"TOO_MANY_TRY_LOGIN\",\r\n  \"30\": \"LOGIN_FAILED\",\r\n  \"32\": \"MOBILE_UNREGISTERED\",\r\n  \"-100\": \"DEVICE_NOT_REGISTERED\",\r\n  \"-101\": \"ANOTHER_LOGON\",\r\n  \"-102\": \"DEVICE_REGISTER_FAILED\",\r\n  \"-110\": \"INVALID_DEVICE_REGISTER\",\r\n  \"-111\": \"INCORRECT_PASSCODE\",\r\n  \"-112\": \"PASSCODE_REQUEST_FAILED\",\r\n  \"-997\": \"ACCOUNT_RESTRICTED\",\r\n};\r\n","import { port } from \"../helpers/config\";\r\nimport { errors } from \"../helpers/errorCodes\";\r\nimport { store } from \"../redux\";\r\n\r\nexport const tryLoginApi = async (\r\n  email: string,\r\n  password: string,\r\n  deviceName: string,\r\n  deviceId: string\r\n) => {\r\n  const loginPromise = new Promise(async (resolve, reject) => {\r\n    try {\r\n      const {\r\n        user: { accessToken },\r\n      } = store.getState();\r\n      console.log(\"accessToken: \", accessToken);\r\n      if (!accessToken) {\r\n        const requestOptions = {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify({\r\n            email,\r\n            password,\r\n            deviceName,\r\n            deviceId,\r\n          }),\r\n        };\r\n        let apiEndPoint = \"\";\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n          // dev code\r\n          apiEndPoint = `http://localhost:${port}/login`;\r\n        } else {\r\n          // production code\r\n          apiEndPoint = \"/login\";\r\n        }\r\n        let result: any = await fetch(apiEndPoint, requestOptions);\r\n        result = await result.json();\r\n        if (result.error) {\r\n          let errorMessage = errors[`${result.error}`];\r\n          if (!errorMessage) {\r\n            errorMessage = result.message;\r\n          }\r\n          alert(errorMessage);\r\n          console.log(\"result errorMessage: \", errorMessage);\r\n          reject(errorMessage);\r\n        } else {\r\n          console.log(\"result: \", result);\r\n          resolve(result);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n  return await loginPromise;\r\n};\r\n","import { store } from \"../redux\";\r\n\r\nimport { setStartLoading, setStopLoading } from \"../redux/action/user\";\r\n\r\nexport const startLoading = () => {\r\n  store.dispatch(setStartLoading());\r\n};\r\n\r\nexport const stopLoading = () => {\r\n  store.dispatch(setStopLoading());\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { tryLoginApi } from \"../../api/user\";\r\nimport { port } from \"../../helpers/config\";\r\nimport {\r\n  loginUser,\r\n  logoutUser,\r\n  newMessage,\r\n  setWs,\r\n} from \"../../redux/action/user\";\r\nimport { startLoading, stopLoading } from \"../../utils/loading\";\r\n\r\nclass Login extends React.Component<any> {\r\n  loginFormHandler = async (event: any) => {\r\n    const { history, dispatch }: any = this.props;\r\n    event.preventDefault();\r\n    const emailElem = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n    const email = emailElem.value;\r\n\r\n    const passwordElem = document.getElementById(\r\n      \"userPassword\"\r\n    ) as HTMLInputElement;\r\n\r\n    const password = passwordElem.value;\r\n    const deviceData = localStorage.getItem(email);\r\n    if (!deviceData) {\r\n      alert(\"Please register device first\");\r\n    } else {\r\n      try {\r\n        startLoading();\r\n        const { deviceName, deviceId } = JSON.parse(deviceData);\r\n        const user: any = await tryLoginApi(\r\n          email,\r\n          password,\r\n          deviceName,\r\n          deviceId\r\n        );\r\n        console.log(\"user: \", user);\r\n        let wsEndPoint = \"\";\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n          // dev code\r\n          wsEndPoint = `ws://localhost:${port}`;\r\n        } else {\r\n          // production code\r\n          wsEndPoint = window.location.origin.replace(/^http/, \"ws\");\r\n        }\r\n        const socket = new WebSocket(wsEndPoint);\r\n        socket.onopen = () => {\r\n          console.log(\"Socket is open\");\r\n          socket.send(JSON.stringify({ key: \"setEmail\", value: email }));\r\n          dispatch(setWs(socket));\r\n        };\r\n        socket.onmessage = (event) => {\r\n          try {\r\n            const data = JSON.parse(event.data);\r\n            const { key } = data;\r\n            if (key === \"newMesssage\") {\r\n              const { text, sender, receiverUser, sendAt, attachment } = data;\r\n              const messageObj = { text, sender, receiverUser, sendAt };\r\n              console.log(\"We have a message: \", messageObj);\r\n              const receiverUserName = Object.keys(receiverUser)[0];\r\n              dispatch(\r\n                newMessage({\r\n                  receiverUserName,\r\n                  message: { attachment, text, received: true },\r\n                  senderName: sender.nickname,\r\n                })\r\n              );\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            stopLoading();\r\n            console.log(\"We have a message: \", event.data);\r\n          }\r\n        };\r\n        socket.onerror = () => {\r\n          alert(\"Socket has error\");\r\n        };\r\n        socket.onclose = () => {\r\n          alert(\"Socket is closed\");\r\n          dispatch(logoutUser());\r\n          history.push(\"/login\");\r\n        };\r\n        dispatch(loginUser(user));\r\n        localStorage.setItem(\r\n          \"token\",\r\n          JSON.stringify({\r\n            accessToken: user.accessToken,\r\n            refreshToken: user.accessToken,\r\n            email,\r\n            password,\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n        stopLoading();\r\n      } catch (error) {\r\n        stopLoading();\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form className=\"m-3\" onSubmit={this.loginFormHandler}>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"userEmail\" className=\"form-label\">\r\n              Email address\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control\"\r\n              id=\"userEmail\"\r\n              required\r\n              aria-describedby=\"emailHelp\"\r\n            />\r\n            <div id=\"emailHelp\" className=\"form-text\">\r\n              We'll never share your email with anyone else.\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"userPassword\" className=\"form-label\">\r\n              Password\r\n            </label>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              autoComplete=\"true\"\r\n              required\r\n              id=\"userPassword\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-outline-dark m-2\">\r\n            Login\r\n          </button>\r\n          <Link to=\"/register\">\r\n            <button type=\"submit\" className=\"btn btn-outline-info\">\r\n              Register Device\r\n            </button>\r\n          </Link>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    chatList: state.user.chatList,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(withRouter(Login));\r\n","import { port } from \"../helpers/config\";\r\nimport { errors } from \"../helpers/errorCodes\";\r\n\r\nexport const trySendDeviceRegisterApi = async (\r\n  deviceName: string,\r\n  deviceId: string,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ deviceName, deviceId, email, password }),\r\n  };\r\n  let apiEndPoint = \"\";\r\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n    // dev code\r\n    apiEndPoint = `http://localhost:${port}/device/sendCode`;\r\n  } else {\r\n    // production code\r\n    apiEndPoint = \"/device/sendCode\";\r\n  }\r\n  let result: any = await fetch(apiEndPoint, requestOptions);\r\n  result = await result.json();\r\n  if (result.error) {\r\n    const errorMessage = result.message;\r\n    alert(errorMessage);\r\n    console.log(\"result: \", errorMessage);\r\n  } else {\r\n    alert(result.message);\r\n    console.log(result.message);\r\n  }\r\n};\r\n\r\nexport const trySetDeviceRegisterApi = async (\r\n  code: string,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  const setCodePromise = new Promise(async (resolve, reject) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ code, email, password }),\r\n    };\r\n    let apiEndPoint = \"\";\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      // dev code\r\n      apiEndPoint = `http://localhost:${port}/device/setCode`;\r\n    } else {\r\n      // production code\r\n      apiEndPoint = \"/device/setCode\";\r\n    }\r\n    let result: any = await fetch(apiEndPoint, requestOptions);\r\n    result = await result.json();\r\n    if (result.error) {\r\n      let errorMessage = errors[`${result.error}`];\r\n      if (!errorMessage) {\r\n        errorMessage = result.message;\r\n      }\r\n      alert(errorMessage);\r\n      console.log(\"result: \", result);\r\n      console.log(\"errorMessage: \", errorMessage);\r\n      reject(errorMessage);\r\n    } else {\r\n      resolve(result.message);\r\n      alert(result.message);\r\n      console.log(result);\r\n    }\r\n  });\r\n\r\n  return await setCodePromise;\r\n};\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { v4 as randomId } from \"uuid\";\r\nimport {\r\n  trySendDeviceRegisterApi,\r\n  trySetDeviceRegisterApi,\r\n} from \"../../api/device\";\r\n\r\nconst RegisterDevice = () => {\r\n  const history = useHistory();\r\n\r\n  const registerFormHandler = async (event: any) => {\r\n    event.preventDefault();\r\n    const emailElem = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n    const email = emailElem.value;\r\n    const passwordElem = document.getElementById(\r\n      \"userPassword\"\r\n    ) as HTMLInputElement;\r\n\r\n    const password = passwordElem.value;\r\n    const deviceNameElem = document.getElementById(\r\n      \"machineName\"\r\n    ) as HTMLInputElement;\r\n    const deviceName = deviceNameElem.value;\r\n    let deviceId = randomId();\r\n    deviceId = deviceId.split(\"-\").join(\"\");\r\n    console.log(\"deviceId: \", deviceId);\r\n    try {\r\n      await trySendDeviceRegisterApi(deviceName, deviceId, email, password);\r\n      localStorage.setItem(email, JSON.stringify({ deviceName, deviceId }));\r\n      console.log(\"deviceName: \", deviceName);\r\n      console.log(\"deviceId: \", deviceId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const registerCodeFormHandler = async (event: any) => {\r\n    event.preventDefault();\r\n    const emailElem = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n    const email = emailElem.value;\r\n    const passwordElem = document.getElementById(\r\n      \"userPassword\"\r\n    ) as HTMLInputElement;\r\n\r\n    const password = passwordElem.value;\r\n    const registerCodeElem = document.getElementById(\r\n      \"registerCode\"\r\n    ) as HTMLInputElement;\r\n    const registerCode = registerCodeElem.value;\r\n    try {\r\n      await trySetDeviceRegisterApi(registerCode, email, password);\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"m-3\" onSubmit={registerFormHandler}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userEmail\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"userEmail\"\r\n            required\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userPassword\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            autoComplete=\"true\"\r\n            required\r\n            id=\"userPassword\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"machineName\" className=\"form-label\">\r\n            Enter Device Name To Save\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Office Pc\"\r\n            id=\"machineName\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-outline-dark m-2\">\r\n          Send Code\r\n        </button>\r\n        <Link to=\"/login\">\r\n          <button type=\"submit\" className=\"btn btn-outline-info\">\r\n            Login\r\n          </button>\r\n        </Link>\r\n      </form>\r\n      <form className=\"m-3\" onSubmit={registerCodeFormHandler}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"registerCode\" className=\"form-label\">\r\n            Enter code\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1234\"\r\n            className=\"form-control\"\r\n            id=\"registerCode\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-outline-dark m-2\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterDevice;\r\n","export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";","import { useSelector } from \"react-redux\";\r\nimport profile from \"../../assets/images/profile.png\";\r\n\r\nimport \"./chatListItem.css\";\r\n\r\nconst ChatListItem = ({ name, profileImage, onClickHandler }: any) => {\r\n  const currentFocus = useSelector((state: any) => state.currentFocus);\r\n  return (\r\n    <div\r\n      className={`chatListItemContainer border d-flex flex-row w-10 m-2 p-2 ${\r\n        currentFocus === name && \"focusedContact\"\r\n      }`}\r\n      onClick={onClickHandler}\r\n    >\r\n      <img\r\n        src={profileImage ? profileImage : profile}\r\n        className=\"rounded-circle profileWidth\"\r\n        alt=\"profileImage\"\r\n      />\r\n      <h3 className=\"d-inline contactName\">{name}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport \"./chatWindow.css\";\r\n\r\nconst ChatWindow = (props: any) => {\r\n  const chat = useSelector((state: any) => {\r\n    console.log(\"useSelector\");\r\n    return state.chat;\r\n  });\r\n\r\n  return (\r\n    <div className=\"chatWindowContainer m-2\">\r\n      {console.log(\"props: \", props)}\r\n      <h1>Chat Window</h1>\r\n      {chat.map((message: any, index: number) => (\r\n        <div\r\n          key={index}\r\n          className={\r\n            message.received\r\n              ? \"d-flex border-bottom m-2\"\r\n              : \"d-flex flex-row-reverse\"\r\n          }\r\n        >\r\n          {message.text === \"photo\" &&\r\n            message.attachment &&\r\n            message.attachment.thumbnailUrl && (\r\n              <img\r\n                loading=\"lazy\"\r\n                alt=\"userImages\"\r\n                src={message.attachment.thumbnailUrl}\r\n              />\r\n            )}\r\n          <span\r\n            className={\r\n              message.received\r\n                ? \"receiverMessage m-2 p-2 d-block w-100\"\r\n                : \"senderMessage m-2 p-2 d-block\"\r\n            }\r\n          >\r\n            <b>text: </b>\r\n            {message.text}\r\n            <b> from: </b>\r\n            {message.senderName}\r\n            <b> to: </b>\r\n            {message.receiverUserName}\r\n          </span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import ChatWindow from \"../chatWindow/chatWindow\";\r\nimport MessageInput from \"../messageInput/messageInput\";\r\n\r\nconst Messages = () => {\r\n  return (\r\n    <div>\r\n      <ChatWindow />\r\n      <MessageInput />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport ChatListItem from \"../../components/chatListItem/chatListItem\";\r\nimport Messages from \"../../components/messages/messages\";\r\nimport { setFocusUser } from \"../../redux/action/user\";\r\n// import { loadChat } from \"../../redux/action/user\";\r\n\r\nimport \"./home.css\";\r\n\r\nconst Home = (props: any) => {\r\n  const onClickHandler = (name: string) => {\r\n    props.dispatch(setFocusUser(name));\r\n  };\r\n\r\n  const getChatListItems = () => {\r\n    const items = [];\r\n    let index = 0;\r\n    const chatList = props.user.chatList;\r\n    for (const key in chatList) {\r\n      if (Object.prototype.hasOwnProperty.call(chatList, key)) {\r\n        const item = chatList[key];\r\n        items.push(\r\n          <ChatListItem\r\n            profileImage={item.displayUserList[0].profileURL}\r\n            name={item.displayUserList[0].nickname}\r\n            key={index}\r\n            onClickHandler={() =>\r\n              onClickHandler(item.displayUserList[0].nickname)\r\n            }\r\n          />\r\n        );\r\n        index++;\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n  return (\r\n    <div className=\"d-flex\" id=\"homeMainContainer\">\r\n      <div className=\"chatListContainer border d-flex flex-column flex-wrap m-2 justify-content-center\">\r\n        {/* <ChatListItem\r\n          profileImage=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n          name=\"amir\"\r\n        />{\" \"}\r\n        <ChatListItem\r\n          profileImage=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n          name=\"ali\"\r\n        /> */}\r\n        {props.user.chatList ? getChatListItems() : \"\"}\r\n      </div>\r\n      <div className=\"border m-2 messageContainer\">\r\n        <Messages />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { logoutUser } from \"../../../redux/action/user\";\r\n\r\nconst PrivateNavItems = ({ email }: any) => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const logOutHandler = () => {\r\n    dispatch(logoutUser());\r\n    localStorage.removeItem(\"token\");\r\n    history.push(\"/login\");\r\n  };\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <span className=\"nav-link active\">{email}</span>\r\n      </li>\r\n      <li className=\"nav-item hoverEffect\" onClick={logOutHandler}>\r\n        <span className=\"nav-link active\">Logout</span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrivateNavItems;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst PublicNavItems = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicNavItems;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PrivateNavItems from \"./privateNavItems/privateNavItems\";\r\nimport PublicNavItems from \"./publicNavItems/publicNavItems\";\r\n\r\nimport { tryLoginApi } from \"../../api/user\";\r\nimport { startLoading, stopLoading } from \"../../utils/loading\";\r\nimport { port } from \"../../helpers/config\";\r\nimport { loginUser, newMessage, setWs } from \"../../redux/action/user\";\r\n\r\nclass Navbar extends React.Component<any> {\r\n  async componentDidMount() {\r\n    const isKeepLogin = localStorage.getItem(\"token\");\r\n    const { dispatch, history, token }: any = this.props;\r\n    if (isKeepLogin && !token) {\r\n      const { email, password } = JSON.parse(isKeepLogin);\r\n      const deviceData: any = localStorage.getItem(email);\r\n      try {\r\n        startLoading();\r\n        const { deviceName, deviceId } = JSON.parse(deviceData);\r\n        const user: any = await tryLoginApi(\r\n          email,\r\n          password,\r\n          deviceName,\r\n          deviceId\r\n        );\r\n        let wsEndPoint = \"\";\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n          // dev code\r\n          wsEndPoint = `ws://localhost:${port}`;\r\n        } else {\r\n          // production code\r\n          wsEndPoint = window.location.origin.replace(/^http/, \"ws\");\r\n        }\r\n        const socket = new WebSocket(wsEndPoint);\r\n        socket.onopen = () => {\r\n          console.log(\"Socket is open\");\r\n          socket.send(JSON.stringify({ key: \"setEmail\", value: email }));\r\n          dispatch(setWs(socket));\r\n        };\r\n        socket.onmessage = (event) => {\r\n          try {\r\n            const data = JSON.parse(event.data);\r\n            const { key } = data;\r\n            if (key === \"newMesssage\") {\r\n              const { text, sender, receiverUser, sendAt, attachment } = data;\r\n              const messageObj = { text, sender, receiverUser, sendAt };\r\n              console.log(\"We have a message: \", messageObj);\r\n              const receiverUserName = Object.keys(receiverUser)[0];\r\n              dispatch(\r\n                newMessage({\r\n                  receiverUserName,\r\n                  message: { attachment, text, received: true },\r\n                  senderName: sender.nickname,\r\n                })\r\n              );\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            stopLoading();\r\n            console.log(\"We have a message: \", event.data);\r\n          }\r\n        };\r\n        socket.onerror = () => {\r\n          alert(\"Socket has error\");\r\n        };\r\n        socket.onclose = (err) => {\r\n          alert(\"Socket is closed\");\r\n          console.log(err);\r\n          history.push(\"/login\");\r\n        };\r\n        dispatch(loginUser(user));\r\n        localStorage.setItem(\r\n          \"token\",\r\n          JSON.stringify({\r\n            accessToken: user.accessToken,\r\n            refreshToken: user.accessToken,\r\n            email,\r\n            password,\r\n          })\r\n        );\r\n        history.push(\"/\");\r\n        stopLoading();\r\n      } catch (error) {\r\n        stopLoading();\r\n        console.error(error);\r\n      }\r\n    } else {\r\n      console.log(\"Acoided +++++++++++++++++++\");\r\n    }\r\n  }\r\n  render() {\r\n    const { token, email }: any = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#alivaNavbar\"\r\n            aria-controls=\"alivaNavbar\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"alivaNavbar\">\r\n            <Link className=\"navbar-brand\" to=\"/\">\r\n              AlivaTech\r\n            </Link>\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              {token ? <PrivateNavItems email={email} /> : <PublicNavItems />}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    token: state.user.accessToken,\r\n    email: state.user.email,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(withRouter(Navbar));\r\n","import { Route } from \"react-router\";\r\n\r\nconst Public = ({ component: Component, token, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props: any) => {\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\nexport default Public;\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst Private = ({ component: Component, token, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (!token) {\r\n        return <Redirect to={{ pathname: \"/login\" }} />;\r\n      }\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    token: state.user.accessToken,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Private);\r\n","import { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"../pages/login/login\";\r\nimport RegisterDevice from \"../pages/registerDevice/registerDevice\";\r\nimport Home from \"../pages/home/home\";\r\nimport Navbar from \"../components/navbar/navbar\";\r\nimport Public from \"./public/public\";\r\nimport { connect } from \"react-redux\";\r\nimport Private from \"./private/private\";\r\nimport React from \"react\";\r\n\r\nclass MainRouter extends React.Component {\r\n  render() {\r\n    const { loading }: any = this.props;\r\n    if (loading) {\r\n      return (\r\n        <div>\r\n          <h1>Loading ..........</h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <BrowserRouter>\r\n            <Navbar />\r\n            <Switch>\r\n              <Public path=\"/login\" component={Login} />\r\n              <Public path=\"/register\" component={RegisterDevice} />\r\n              <Private path=\"/\" component={Home} />\r\n            </Switch>\r\n          </BrowserRouter>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    loading: state.loading,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MainRouter);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport { store } from \"./redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Router from \"./routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const loginUser = (user: any) => ({\r\n  type: \"LOGIN\",\r\n  payload: user,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: \"LOGOUT\",\r\n});\r\n\r\nexport const setFocusUser = (name: string) => ({\r\n  type: \"SET_FOCUSED_USER\",\r\n  payload: name,\r\n});\r\n\r\nexport const setWs = (ws: any) => ({\r\n  type: \"SET_WS\",\r\n  payload: ws,\r\n});\r\n\r\nexport const newMessage = (data: any) => ({\r\n  type: \"NEW_MESSAGE\",\r\n  payload: data,\r\n});\r\n\r\nexport const loadChat = (name: string) => ({\r\n  type: \"LOAD_CHAT\",\r\n  payload: name,\r\n});\r\n\r\nexport const setStartLoading = () => ({\r\n  type: \"START_LOADING\",\r\n});\r\n\r\nexport const setStopLoading = () => ({\r\n  type: \"STOP_LOADING\",\r\n});\r\n"],"sourceRoot":""}