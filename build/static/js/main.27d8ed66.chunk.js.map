{"version":3,"sources":["redux/reducer/user.ts","redux/index.ts","reportWebVitals.ts","helpers/errorCodes.ts","api/user.ts","redux/action/user.ts","utils/loading.ts","pages/login/login.tsx","api/device.ts","pages/registerDevice/registerDevice.tsx","assets/images/profile.png","components/chatListItem/chatListItem.tsx","components/chatWindow/chatWindow.tsx","components/messageInput/messageInput.tsx","components/messages/messages.tsx","pages/home/home.tsx","components/navbar/privateNavItems/privateNavItems.tsx","components/navbar/publicNavItems/publicNavItems.tsx","components/navbar/navbar.tsx","routes/public/public.tsx","routes/private/private.tsx","routes/index.tsx","index.tsx"],"names":["initialState","user","email","chatList","accessToken","chat","currentFocus","ws","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","state","action","type","console","log","payload","messages","receiverUserName","message","senderName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","errors","tryLoginApi","password","deviceName","deviceId","a","loginPromise","Promise","resolve","reject","requestOptions","method","headers","body","JSON","stringify","apiEndPoint","fetch","result","json","error","errorMessage","alert","loginUser","newMessage","data","stopLoading","dispatch","connect","props","history","useHistory","loginFormHandler","event","preventDefault","emailElem","document","getElementById","value","passwordElem","deviceData","localStorage","getItem","parse","wsEndPoint","location","origin","replace","socket","WebSocket","onopen","send","key","onmessage","text","sender","receiverUser","messageObj","sendAt","Object","keys","received","nickname","onerror","onclose","push","className","onSubmit","htmlFor","id","required","aria-describedby","autoComplete","to","trySendDeviceRegisterApi","trySetDeviceRegisterApi","code","setCodePromise","RegisterDevice","registerFormHandler","deviceNameElem","randomId","split","join","setItem","registerCodeFormHandler","registerCodeElem","registerCode","placeholder","ChatListItem","name","profileImage","onClickHandler","useSelector","onClick","src","profile","alt","ChatWindow","map","index","MessageInput","useDispatch","useState","setMessage","channelId","receiver","onInput","target","Messages","items","prototype","hasOwnProperty","call","item","displayUserList","profileURL","setFocusUser","getChatListItems","PrivateNavItems","aria-current","PublicNavItems","token","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","Public","Component","component","rest","render","pathname","Router","path","Login","Home","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.27d8ed66.chunk.js","sourcesContent":["const initialState = {\r\n  user: {\r\n    email: \"\",\r\n    chatList: {},\r\n    accessToken: \"\",\r\n  },\r\n  chat: [],\r\n  currentFocus: \"\",\r\n  ws: null,\r\n  loading: false,\r\n};\r\n\r\nexport const userReducer = function (state: any = initialState, action: any) {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      console.log(action);\r\n      state = { ...state, user: action.payload };\r\n      return state;\r\n    case \"LOGOUT\":\r\n      // state = { ...state, user: null };\r\n      return state;\r\n    case \"LOAD_CHAT\":\r\n      state = { ...state, chat: state.user.chatList[action.payload].messages };\r\n      return state;\r\n    case \"START_LOADING\":\r\n      state = { ...state, loading: true };\r\n      return state;\r\n    case \"STOP_LOADING\":\r\n      state = { ...state, loading: false };\r\n      return state;\r\n    case \"SET_FOCUSED_USER\":\r\n      state = { ...state, currentFocus: action.payload };\r\n      return state;\r\n    case \"SET_WS\":\r\n      state = { ...state, ws: action.payload };\r\n      return state;\r\n    case \"NEW_MESSAGE\":\r\n      const { receiverUserName, message, senderName } = action.payload;\r\n      // const userMessages = state.messages[receiverUserName];\r\n      // if (!userMessages) {\r\n      //   state.messages[receiverUserName] = [message];\r\n      // } else {\r\n      //   userMessages.concat([message]);\r\n      // }\r\n      // state = Object.assign(state, {\r\n      //   ...state,\r\n      //   messages: userMessages,\r\n      // });\r\n      state = {\r\n        ...state,\r\n        chat: [...state.chat, { receiverUserName, ...message, senderName }],\r\n      };\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { compose, createStore } from \"redux\";\r\nimport { userReducer } from \"./reducer/user\";\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(userReducer, composeEnhancers());\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const errors: any = {\r\n  \"12\": \"LOGIN_FAILED_REASON\",\r\n  \"13\": \"TOO_MANY_TRY_LOGIN\",\r\n  \"30\": \"LOGIN_FAILED\",\r\n  \"32\": \"MOBILE_UNREGISTERED\",\r\n  \"-100\": \"DEVICE_NOT_REGISTERED\",\r\n  \"-101\": \"ANOTHER_LOGON\",\r\n  \"-102\": \"DEVICE_REGISTER_FAILED\",\r\n  \"-110\": \"INVALID_DEVICE_REGISTER\",\r\n  \"-111\": \"INCORRECT_PASSCODE\",\r\n  \"-112\": \"PASSCODE_REQUEST_FAILED\",\r\n  \"-997\": \"ACCOUNT_RESTRICTED\",\r\n};\r\n","import { port } from \"../helpers/config\";\r\nimport { errors } from \"../helpers/errorCodes\";\r\n\r\nexport const tryLoginApi = async (\r\n  email: string,\r\n  password: string,\r\n  deviceName: string,\r\n  deviceId: string\r\n) => {\r\n  const loginPromise = new Promise(async (resolve, reject) => {\r\n    try {\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password, deviceName, deviceId }),\r\n      };\r\n      let apiEndPoint = \"\";\r\n      if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n        // dev code\r\n        apiEndPoint = `http://localhost:${port}/login`;\r\n      } else {\r\n        // production code\r\n        apiEndPoint = \"/login\";\r\n      }\r\n      let result: any = await fetch(apiEndPoint, requestOptions);\r\n      result = await result.json();\r\n      if (result.error) {\r\n        let errorMessage = errors[`${result.error}`];\r\n        if (!errorMessage) {\r\n          errorMessage = result.message;\r\n        }\r\n        alert(errorMessage);\r\n        console.log(\"result errorMessage: \", errorMessage);\r\n        reject(errorMessage);\r\n      } else {\r\n        console.log(\"result: \", result);\r\n        resolve(result);\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n  return await loginPromise;\r\n};\r\n","export const loginUser = (user: any) => ({\r\n  type: \"LOGIN\",\r\n  payload: user,\r\n});\r\n\r\nexport const logoutUser = () => ({\r\n  type: \"LOGOUT\",\r\n});\r\n\r\nexport const setFocusUser = (name: string) => ({\r\n  type: \"SET_FOCUSED_USER\",\r\n  payload: name,\r\n});\r\n\r\nexport const setWs = (ws: any) => ({\r\n  type: \"SET_WS\",\r\n  payload: ws,\r\n});\r\n\r\nexport const newMessage = (data: any) => ({\r\n  type: \"NEW_MESSAGE\",\r\n  payload: data,\r\n});\r\n\r\nexport const loadChat = (name: string) => ({\r\n  type: \"LOAD_CHAT\",\r\n  payload: name,\r\n});\r\n\r\nexport const setStartLoading = () => ({\r\n  type: \"START_LOADING\",\r\n});\r\n\r\nexport const setStopLoading = () => ({\r\n  type: \"STOP_LOADING\",\r\n});\r\n","import { store } from \"../redux\";\r\n\r\nimport { setStartLoading, setStopLoading } from \"../redux/action/user\";\r\n\r\nexport const startLoading = () => {\r\n  store.dispatch(setStartLoading());\r\n};\r\n\r\nexport const stopLoading = () => {\r\n  store.dispatch(setStopLoading());\r\n};\r\n","import { connect } from \"react-redux\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { tryLoginApi } from \"../../api/user\";\r\nimport { port } from \"../../helpers/config\";\r\nimport { loginUser, newMessage, setWs } from \"../../redux/action/user\";\r\nimport { startLoading, stopLoading } from \"../../utils/loading\";\r\n\r\nconst Login = (props: any) => {\r\n  let history = useHistory();\r\n  const loginFormHandler = async (event: any) => {\r\n    event.preventDefault();\r\n    const emailElem = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n    const email = emailElem.value;\r\n\r\n    const passwordElem = document.getElementById(\r\n      \"userPassword\"\r\n    ) as HTMLInputElement;\r\n\r\n    const password = passwordElem.value;\r\n    const deviceData = localStorage.getItem(email);\r\n    if (!deviceData) {\r\n      alert(\"Please register device first\");\r\n    } else {\r\n      try {\r\n        startLoading();\r\n        const { deviceName, deviceId } = JSON.parse(deviceData);\r\n        const user = await tryLoginApi(email, password, deviceName, deviceId);\r\n        console.log(\"user: \", user);\r\n        let wsEndPoint = \"\";\r\n        if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n          // dev code\r\n          wsEndPoint = `ws://localhost:${port}`;\r\n        } else {\r\n          // production code\r\n          wsEndPoint = window.location.origin.replace(/^http/, \"ws\");\r\n        }\r\n        const socket = new WebSocket(wsEndPoint);\r\n        socket.onopen = () => {\r\n          console.log(\"Socket is open\");\r\n          socket.send(JSON.stringify({ key: \"setEmail\", value: email }));\r\n          props.dispatch(setWs(socket));\r\n        };\r\n        socket.onmessage = (event) => {\r\n          try {\r\n            const data = JSON.parse(event.data);\r\n            const { key } = data;\r\n            if (key === \"newMesssage\") {\r\n              const { text, sender, receiverUser, sendAt } = data;\r\n              const messageObj = { text, sender, receiverUser, sendAt };\r\n              console.log(\"We have a message: \", messageObj);\r\n              const receiverUserName = Object.keys(receiverUser)[0];\r\n              props.dispatch(\r\n                newMessage({\r\n                  receiverUserName,\r\n                  message: { text, received: true },\r\n                  senderName: sender.nickname,\r\n                })\r\n              );\r\n            }\r\n          } catch (error) {\r\n            console.log(error);\r\n            stopLoading();\r\n            console.log(\"We have a message: \", event.data);\r\n          }\r\n        };\r\n        socket.onerror = () => {\r\n          alert(\"Socket has error\");\r\n        };\r\n        socket.onclose = () => {\r\n          alert(\"Socket is closed\");\r\n        };\r\n        props.dispatch(loginUser(user));\r\n        history.push(\"/\");\r\n        stopLoading();\r\n      } catch (error) {\r\n        stopLoading();\r\n        console.error(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"m-3\" onSubmit={loginFormHandler}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"userEmail\" className=\"form-label\">\r\n          Email address\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control\"\r\n          id=\"userEmail\"\r\n          required\r\n          aria-describedby=\"emailHelp\"\r\n        />\r\n        <div id=\"emailHelp\" className=\"form-text\">\r\n          We'll never share your email with anyone else.\r\n        </div>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"userPassword\" className=\"form-label\">\r\n          Password\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          autoComplete=\"true\"\r\n          required\r\n          id=\"userPassword\"\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-outline-dark m-2\">\r\n        Login\r\n      </button>\r\n      <Link to=\"/register\">\r\n        <button type=\"submit\" className=\"btn btn-outline-info\">\r\n          Register Device\r\n        </button>\r\n      </Link>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    chatList: state.user.chatList,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Login);\r\n","import { port } from \"../helpers/config\";\r\nimport { errors } from \"../helpers/errorCodes\";\r\n\r\nexport const trySendDeviceRegisterApi = async (\r\n  deviceName: string,\r\n  deviceId: string,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ deviceName, deviceId, email, password }),\r\n  };\r\n  let apiEndPoint = \"\";\r\n  if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n    // dev code\r\n    apiEndPoint = `http://localhost:${port}/device/sendCode`;\r\n  } else {\r\n    // production code\r\n    apiEndPoint = \"/device/sendCode\";\r\n  }\r\n  let result: any = await fetch(apiEndPoint, requestOptions);\r\n  result = await result.json();\r\n  if (result.error) {\r\n    const errorMessage = result.message;\r\n    alert(errorMessage);\r\n    console.log(\"result: \", errorMessage);\r\n  } else {\r\n    alert(result.message);\r\n    console.log(result.message);\r\n  }\r\n};\r\n\r\nexport const trySetDeviceRegisterApi = async (\r\n  code: string,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  const setCodePromise = new Promise(async (resolve, reject) => {\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ code, email, password }),\r\n    };\r\n    let apiEndPoint = \"\";\r\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\") {\r\n      // dev code\r\n      apiEndPoint = `http://localhost:${port}/device/setCode`;\r\n    } else {\r\n      // production code\r\n      apiEndPoint = \"/device/setCode\";\r\n    }\r\n    let result: any = await fetch(apiEndPoint, requestOptions);\r\n    result = await result.json();\r\n    if (result.error) {\r\n      let errorMessage = errors[`${result.error}`];\r\n      if (!errorMessage) {\r\n        errorMessage = result.message;\r\n      }\r\n      alert(errorMessage);\r\n      console.log(\"result: \", result);\r\n      console.log(\"errorMessage: \", errorMessage);\r\n      reject(errorMessage);\r\n    } else {\r\n      resolve(result.message);\r\n      alert(result.message);\r\n      console.log(result);\r\n    }\r\n  });\r\n\r\n  return await setCodePromise;\r\n};\r\n","import { Link, useHistory } from \"react-router-dom\";\r\nimport { v4 as randomId } from \"uuid\";\r\nimport {\r\n  trySendDeviceRegisterApi,\r\n  trySetDeviceRegisterApi,\r\n} from \"../../api/device\";\r\n\r\nconst RegisterDevice = () => {\r\n  const history = useHistory();\r\n\r\n  const registerFormHandler = async (event: any) => {\r\n    event.preventDefault();\r\n    const emailElem = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n    const email = emailElem.value;\r\n    const passwordElem = document.getElementById(\r\n      \"userPassword\"\r\n    ) as HTMLInputElement;\r\n\r\n    const password = passwordElem.value;\r\n    const deviceNameElem = document.getElementById(\r\n      \"machineName\"\r\n    ) as HTMLInputElement;\r\n    const deviceName = deviceNameElem.value;\r\n    let deviceId = randomId();\r\n    deviceId = deviceId.split(\"-\").join(\"\");\r\n    console.log(\"deviceId: \", deviceId);\r\n    try {\r\n      await trySendDeviceRegisterApi(deviceName, deviceId, email, password);\r\n      localStorage.setItem(email, JSON.stringify({ deviceName, deviceId }));\r\n      console.log(\"deviceName: \", deviceName);\r\n      console.log(\"deviceId: \", deviceId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const registerCodeFormHandler = async (event: any) => {\r\n    event.preventDefault();\r\n    const emailElem = document.getElementById(\"userEmail\") as HTMLInputElement;\r\n    const email = emailElem.value;\r\n    const passwordElem = document.getElementById(\r\n      \"userPassword\"\r\n    ) as HTMLInputElement;\r\n\r\n    const password = passwordElem.value;\r\n    const registerCodeElem = document.getElementById(\r\n      \"registerCode\"\r\n    ) as HTMLInputElement;\r\n    const registerCode = registerCodeElem.value;\r\n    try {\r\n      await trySetDeviceRegisterApi(registerCode, email, password);\r\n      history.push(\"/login\");\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form className=\"m-3\" onSubmit={registerFormHandler}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userEmail\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"userEmail\"\r\n            required\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"userPassword\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            autoComplete=\"true\"\r\n            required\r\n            id=\"userPassword\"\r\n          />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"machineName\" className=\"form-label\">\r\n            Enter Device Name To Save\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Office Pc\"\r\n            id=\"machineName\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-outline-dark m-2\">\r\n          Send Code\r\n        </button>\r\n        <Link to=\"/login\">\r\n          <button type=\"submit\" className=\"btn btn-outline-info\">\r\n            Login\r\n          </button>\r\n        </Link>\r\n      </form>\r\n      <form className=\"m-3\" onSubmit={registerCodeFormHandler}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"registerCode\" className=\"form-label\">\r\n            Enter code\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"1234\"\r\n            className=\"form-control\"\r\n            id=\"registerCode\"\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-outline-dark m-2\">\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterDevice;\r\n","export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";","import { useSelector } from \"react-redux\";\r\nimport profile from \"../../assets/images/profile.png\";\r\n\r\nimport \"./chatListItem.css\";\r\n\r\nconst ChatListItem = ({ name, profileImage, onClickHandler }: any) => {\r\n  const currentFocus = useSelector((state: any) => state.currentFocus);\r\n  return (\r\n    <div\r\n      className={`chatListItemContainer border d-flex flex-row w-10 m-2 p-2 ${\r\n        currentFocus === name && \"focusedContact\"\r\n      }`}\r\n      onClick={onClickHandler}\r\n    >\r\n      <img\r\n        src={profileImage ? profileImage : profile}\r\n        className=\"rounded-circle profileWidth\"\r\n        alt=\"profileImage\"\r\n      />\r\n      <h3 className=\"d-inline contactName\">{name}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatListItem;\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport \"./chatWindow.css\";\r\n\r\nconst ChatWindow = (props: any) => {\r\n  const chat = useSelector((state: any) => {\r\n    console.log(\"useSelector\");\r\n    return state.chat;\r\n  });\r\n\r\n  return (\r\n    <div className=\"chatWindowContainer m-2\">\r\n      {console.log(\"props: \", props)}\r\n      <h1>Chat Window</h1>\r\n      {chat.map(\r\n        (\r\n          { text, received, receiverUserName, senderName }: any,\r\n          index: number\r\n        ) => (\r\n          <div\r\n            key={index}\r\n            className={\r\n              received ? \"d-flex border-bottom m-2\" : \"d-flex flex-row-reverse\"\r\n            }\r\n          >\r\n            <span\r\n              className={\r\n                received\r\n                  ? \"receiverMessage m-2 p-2 d-block w-100\"\r\n                  : \"senderMessage m-2 p-2 d-block\"\r\n              }\r\n            >\r\n              <b>text: </b>\r\n              {text}\r\n              <b> from: </b>\r\n              {senderName}\r\n              <b> to: </b>\r\n              {receiverUserName}\r\n            </span>\r\n          </div>\r\n        )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { newMessage } from \"../../redux/action/user\";\r\nimport \"./messageInput.css\";\r\n\r\nconst MessageInput = () => {\r\n  const currentFocus = useSelector((state: any) => state.currentFocus);\r\n  const email = useSelector((state: any) => state.user.email);\r\n  const chatList = useSelector((state: any) => state.user.chatList);\r\n  const ws = useSelector((state: any) => state.ws);\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState(\"\");\r\n  const sendMessageHandler = (event: any) => {\r\n    event.preventDefault();\r\n    if (!currentFocus) {\r\n      alert(\"Please a contact first\");\r\n      return;\r\n    } else {\r\n      console.log(currentFocus);\r\n      const channelId = chatList[currentFocus][`channelId`];\r\n      ws.send(\r\n        JSON.stringify({\r\n          key: \"newMessage\",\r\n          value: { message, receiver: currentFocus, email, channelId },\r\n        })\r\n      );\r\n      dispatch(\r\n        newMessage({\r\n          receiverUserName: currentFocus,\r\n          message: { text: message, received: true },\r\n          senderName: \"Self\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"messageInputContainer\">\r\n      <form onSubmit={sendMessageHandler}>\r\n        <div className=\"m-2\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            onInput={(event: any) => setMessage(event.target.value)}\r\n            required\r\n          />\r\n          <button className=\"btn btn-info mt-2\" type=\"submit\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import ChatWindow from \"../chatWindow/chatWindow\";\r\nimport MessageInput from \"../messageInput/messageInput\";\r\n\r\nconst Messages = () => {\r\n  return (\r\n    <div>\r\n      <ChatWindow />\r\n      <MessageInput />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\n\r\nimport ChatListItem from \"../../components/chatListItem/chatListItem\";\r\nimport Messages from \"../../components/messages/messages\";\r\nimport { setFocusUser } from \"../../redux/action/user\";\r\n// import { loadChat } from \"../../redux/action/user\";\r\n\r\nimport \"./home.css\";\r\n\r\nconst Home = (props: any) => {\r\n  const onClickHandler = (name: string) => {\r\n    props.dispatch(setFocusUser(name));\r\n  };\r\n\r\n  const getChatListItems = () => {\r\n    const items = [];\r\n    let index = 0;\r\n    const chatList = props.user.chatList;\r\n    for (const key in chatList) {\r\n      if (Object.prototype.hasOwnProperty.call(chatList, key)) {\r\n        const item = chatList[key];\r\n        items.push(\r\n          <ChatListItem\r\n            profileImage={item.displayUserList[0].profileURL}\r\n            name={item.displayUserList[0].nickname}\r\n            key={index}\r\n            onClickHandler={() =>\r\n              onClickHandler(item.displayUserList[0].nickname)\r\n            }\r\n          />\r\n        );\r\n        index++;\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n  return (\r\n    <div className=\"d-flex\" id=\"homeMainContainer\">\r\n      <div className=\"chatListContainer border d-flex flex-column flex-wrap m-2 justify-content-center\">\r\n        {/* <ChatListItem\r\n          profileImage=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n          name=\"amir\"\r\n        />{\" \"}\r\n        <ChatListItem\r\n          profileImage=\"https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\"\r\n          name=\"ali\"\r\n        /> */}\r\n        {props.user.chatList ? getChatListItems() : \"\"}\r\n      </div>\r\n      <div className=\"border m-2 messageContainer\">\r\n        <Messages />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst PrivateNavItems = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n          Home\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <span className=\"nav-link active\">Logout</span>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrivateNavItems;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst PublicNavItems = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link active\" to=\"/login\">\r\n          Login\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PublicNavItems;\r\n","import { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PrivateNavItems from \"./privateNavItems/privateNavItems\";\r\nimport PublicNavItems from \"./publicNavItems/publicNavItems\";\r\n\r\nconst Navbar = ({ token }: any) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container-fluid\">\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#alivaNavbar\"\r\n          aria-controls=\"alivaNavbar\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"alivaNavbar\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            AlivaTech\r\n          </Link>\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {token ? <PrivateNavItems /> : <PublicNavItems />}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    token: state.user.accessToken,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import { Route } from \"react-router\";\r\n\r\nconst Public = ({ component: Component, token, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props: any) => {\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\nexport default Public;\r\n","import { connect } from \"react-redux\";\r\nimport { Redirect, Route } from \"react-router\";\r\n\r\nconst Private = ({ component: Component, token, ...rest }: any) => (\r\n  <Route\r\n    {...rest}\r\n    render={(props) => {\r\n      if (!token) {\r\n        return <Redirect to={{ pathname: \"/login\" }} />;\r\n      }\r\n      return <Component {...props} />;\r\n    }}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    token: state.user.accessToken,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Private);\r\n","import { BrowserRouter, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"../pages/login/login\";\r\nimport RegisterDevice from \"../pages/registerDevice/registerDevice\";\r\nimport Home from \"../pages/home/home\";\r\nimport Navbar from \"../components/navbar/navbar\";\r\nimport Public from \"./public/public\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Private from \"./private/private\";\r\n\r\nconst Router = () => {\r\n  const loading = useSelector((state: any) => state.loading);\r\n  if (loading) {\r\n    return (\r\n      <div>\r\n        <h1>Loading ..........</h1>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <BrowserRouter>\r\n          <Navbar />\r\n          <Switch>\r\n            <Public path=\"/login\" component={Login} />\r\n            <Public path=\"/register\" component={RegisterDevice} />\r\n            <Private path=\"/\" component={Home} />\r\n          </Switch>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Router;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport { store } from \"./redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Router from \"./routes\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}